/****************************************************************************************************/
/*                          			GLOBAL / CONSTANTES	                                 		*/
/****************************************************************************************************/
var states 					= {};
states[Connection.UNKNOWN]  = 'Unknown connection';
states[Connection.ETHERNET] = 'Ethernet connection';
states[Connection.WIFI]     = 'WiFi connection';
states[Connection.CELL_2G]  = 'Cell 2G connection';
states[Connection.CELL_3G]  = 'Cell 3G connection';
states[Connection.CELL_4G]  = 'Cell 4G connection';
states[Connection.CELL]     = 'Cell generic connection';
states[Connection.NONE]     = 'No network connection';

function checkCache(){
	var localStorage 			= new LocalStorage();
	if(localStorage != null){
		localStorage.checkCache();
	}
}

function clearCache(){
	var localStorage 			= new LocalStorage();
	if(localStorage != null){
		localStorage.clearCache();
	}
}

/****************************************************************************************************/
/*                          			GLOBAL / CONSTANTES	                                 		*/
/****************************************************************************************************/

$(document).ready(function() { 
	//document.addEventListener("online", 		onOnline, 		false);
	//document.addEventListener("offline", 		onOffline, 		false);
	document.addEventListener("deviceready", 	onDeviceReady, 	false);
});

function onDeviceReady() {
	//$.mobile.allowCrossDomainPages = true; 
    $.support.cors = true;
    
    generateArbo();
    ResizeRefreshPositionsElements();
	console.log("**Device [OK]");
}

function onOnline() {
	alert("Connection !");
}

function onOffline() {
	alert("Connection Lost !");
}

function checkConnection() {
    var networkState 			= navigator.network.connection.type;
    return states[networkState];
}

function connectionIsAvailable(){
	return (	checkConnection() != states[Connection.NONE] 
			&&	checkConnection() != states[Connection.UNKNOWN]);
}

function refreshNotification(){
	console.log("**RefreshNotification");
	// Faut-il afficher la notif ?
	var localStorage	= new LocalStorage();
	if(localStorage.getFirstIndexAvailable() == 0){
		$('#imgNotification').css('visibility', 'hidden');	
	}else{
		$('#imgNotification').css('visibility', 'visible');	
	}
}

function ResizeRefreshPositionsElements(){
	// Redimenssionnement
	$('#imgClockIn').css('width', 128);
    $('#imgClockIn').css('height', 128);
	
    // Capture des tailles
    container_width 	= $('#mainBody').width();
	container_height 	= $('#mainBody').height();
    clockIn_width 		= $('#imgClockIn').width();
    clockIn_height 		= $('#imgClockIn').height();
    notif_width 		= $('#imgNotification').width();
    notif_height 		= $('#imgNotification').height();
	
    // Positionnement
    $('#imgClockIn').css('position', 'absolute');
    $('#imgClockIn').css('marginLeft', '' 	+ ((container_width - (clockIn_width)) / 2) 		+ 'px');
	$('#imgClockIn').css('marginTop', '' 	+ ((container_height - clockIn_height) / 2) - 50 	+ 'px');
	
	$('#imgNotification').css('position', 'absolute');
	$('#imgNotification').css('marginLeft', '' 	+ ((container_width - notif_width)) 	+ 'px');
	$('#imgNotification').css('marginTop', '' 	+ ((container_height - notif_height)) 	+ 'px');
	
	// Affiche les notifs ?
	refreshNotification();
			
	// Debug
	console.log("**ResizeRefreshPositionsElements[OK]");
	console.log("******container_width = " 	+ container_width);
	console.log("******container_height = "	+ container_height);
	console.log("******clockIn_width = " 	+ clockIn_width);
	console.log("******clockIn_height = "	+ clockIn_height);
	console.log("******notif_width = " 		+ notif_width);
	console.log("******notif_height = "		+ notif_height);
}

function sendCache(){
	var localStorage 			= new LocalStorage();
	if(connectionIsAvailable()){
		localStorage.executeCache();
	}else{
		$('#divDebug').html($('#divDebug').html() + "<span style=\"color:Red;\">--> Connexion NON-OK </span><br/>"); 
	}
}

/****************************************************************************************************/
/*                          			APPELS AJAX			                                 		*/
/****************************************************************************************************/
/*------------------------METHODES------------------------*/
function GetInstitutionNameByExternalId() {
	if(connectionIsAvailable())
	{
		config = getConfig();		
		if(config != null){
			console.log("**config [OK]");							
			console.log("******URL	: " + config.getUrl());
			console.log("******ID	: " + config.getExternalId());
			
			$.ajax(
		    {
		        type		: 'GET',
		        async 		: true,
		        dataType	: 'jsonp',			// allow cross-Domain
		        url			: config.getUrl() + "?callback=?",
		        jsonp		: 'successGetInstitutionNameByExternalId',
		        timeout		: 3000,
		        data		: 'idExternal=' + config.getExternalId() + '&action=GetInstitutionNameByExternalId',
		        success		: function(success){
		        	successGetInstitutionNameByExternalId(success);
		        },
		    });
		}
		else{
			console.log("**config [NOK]");
		}	
	}
}

function TrySendNewClockInMovement(date){
	var localStorage 			= new LocalStorage();
	if(connectionIsAvailable())
	{
		$('#divDebug').html("<span style=\"color:Green;\">--> Connexion OK </span><br/>"); 
		config = getConfig();		
		if(config != null){
			$('#divDebug').html($('#divDebug').html() + "<span style=\"color:Green;\">--> Configuration OK </span><br/>"); 
			console.log("**config [OK]");							
			console.log("******URL	: " + config.getUrl());
			console.log("******ID	: " + config.getExternalId());
			
			var dateSend;
			if(date == null){
				console.log("non cache");
				dateSend 	= config.getFormatDateNow();
			}else{
				console.log("cache");
				dateSend 	= date;
			}
			
			$.ajax(
		    {
		        type		: 'GET',
		        async 		: true,
		        dataType	: 'jsonp',			// allow cross-Domain
		        url			: config.getUrl() + "?callback=?",
		        jsonp		: 'successTrySendNewClockInMovement',
		        timeout		: 3000,
		        data		: 'idExternal=' + config.getBadge() + '&badge=' + config.getExternalId() + '&clockInDateTime=' + dateSend + '&action=TrySendNewClockInMovement',
		        success		: function(success){
		        	successTrySendNewClockInMovement(success);
		        },
		        error		: function(jqXHR, textStatus, errorThrown){
		        	errorMessage(jqXHR, textStatus, errorThrown);
		        },
		        complete	: function(){
		        	refreshNotification();
		        }
		    });
		}
		else{
			console.log("**config [NOK]");
		}	
	}
	else
	{
		$('#divDebug').html("<span style=\"color:Red;\">--> Connexion NON-OK </span><br/>"); 
		// Go Cache
		localStorage.newEventCache();
		refreshNotification();
	}
}

/*------------------------FAIL------------------------*/
function errorMessage(jqXHR, textStatus, errorThrown) {
	console.log("Error [jqXHR] : " + jqXHR);
	console.log("Error [textStatus] : " + textStatus);
	console.log("Error [errorThrown] : " + errorThrown);
	var localStorage 			= new LocalStorage();
	if(textStatus != "parsererror"){
		$('#divDebug').html($('#divDebug').html() + "<span style=\"color:Red;\">--> Envoi NON OK </span><br/>"); 
		localStorage.newEventCache();
	}
}

/*------------------------SUCCESS------------------------*/
function successGetInstitutionNameByExternalId(success) {
	if(success.InstitutionName){
		alert(success.InstitutionName);
	}
}

function successTrySendNewClockInMovement(success) {
	var localStorage 			= new LocalStorage();
	$('#divDebug').html($('#divDebug').html() + "<span style=\"color:Green;\">--> Envoi OK </span><br/>"); 
	if(success.TrySendIsTrue){			// false -> phonegateway Cache || true -> phonegateway sent
		localStorage.executeCache();
	}
}


/*************************************************************************************************/
/*                          			CONFIGURATION			                                 */
/*************************************************************************************************/
function generateArbo(){
	createFile();
	intArbo = setInterval(function(){
		if(myFileEntry){
			generateConfig();
		}
	}, 500);
}

function generateConfig(){
	clearInterval(intArbo);
	writeFile();
	intCfg = setInterval(function(){
		if(myWriter){
			checkConfig();
		}
	}, 500);
}

function checkConfig(){
	clearInterval(intCfg);
	readFile();
}

function setConfig(result){
	var config 		= $(result).find('config');
	var url 		= $(config).attr('url');
	
	var data 		= $(result).find('data');
	var id 			= $(data).attr('externalId');
	var badge		= $(data).attr('badge');
		
	var dataConfig 	= new DataConfig();
	
	dataConfig.setUrl(url);
	dataConfig.setExternalId(id);
	dataConfig.setBadge(badge);
	
	contentFile 	= dataConfig; 
}

function getConfig(){

	if(myCfg){
		setConfig(myCfg);
	}
	
	if(contentFile.isReady()){
		return contentFile;
	}
	else{
		return null;
	}
}


/************************************************************************************************/
/*                          TESTS AJAX SOAP - NE FONCTIONNE PAS                                 */
/************************************************************************************************/

/*
<wsdl:operation name="IsHostAvailable">
<wsdl:input wsaw:Action="http://tempuri.org/IService/IsHostAvailable" message="tns:IService_IsHostAvailable_InputMessage"/>
<wsdl:output wsaw:Action="http://tempuri.org/IService/IsHostAvailableResponse" message="tns:IService_IsHostAvailable_OutputMessage"/>
</wsdl:operation>
*/



/* var xmlhttp = new XMLHttpRequest();
    
// Build SOAP request
var sr =
'<?xml version="1.0" encoding="utf-8"?>' +
'<soapenv:Envelope ' +
'xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" ' +
'xmlns:xsd="http://www.w3.org/2001/XMLSchema" ' +
'xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/">' +
'<soapenv:Body>' +
'<s:GetInstitutionNameByExternalId soapenv:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">' +
'<externalId xsi:type="xsd:string">1</externalId>' +
'</s:GetInstitutionNameByExternalId>' +
'</soapenv:Body>' +
'</soapenv:Envelope>';

xmlhttp.onreadystatechange = function () {
if (xmlhttp.readyState == 4) {
if (xmlhttp.status == 200) {
alert(xmlhttp.responseText);
alert('done use firebug to see response');
}
}
else {
alert(xmlhttp.readyState);
}
}

// Open
xmlhttp.open('POST', 'http://localhost/PhoneGateway_WebWrapper/WebWrapper.aspx/', true);

// Send the POST request
xmlhttp.setRequestHeader('Content-Type', 'text/xml');
xmlhttp.send(sr);*/

//$.ajax({ type: "GET", url: "chat_refresh.php", data: "action=refresh", success: function (msg) { document.getElementById("chat_text").innerHTML = msg; if (msg != precmsg) { bip(); precmsg = msg; } } });
//$.ajax({ type: "GET", url: "chat_refresh.php", data: "action=send&message=" + message + "&pseudo=" + pseudo, success: function () { document.getElementById("msg_input").value = ''; } });




//[WebInvoke(ResponseFormat = WebMessageFormat.Json, RequestFormat = WebMessageFormat.Json, Method = "GET", BodyStyle = WebMessageBodyStyle.WrappedRequest)]

/*$.ajax(
{
async       : true,
type        : "POST",
contentType : "application/xml; charset=utf-8",
//url         : "http://localhost/PhoneGateway_WS/Service.svc/GetInstitutionNameByExternalId",http://tempuri.org/IService/
url         : "http://tempuri.org/IService/GetInstitutionNameByExternalId",
dataType    : "xml",
data        : { externalId : 1 },
//data        : 1,
success     : function (content) {
successMessage(content);
},
error       : function (content) {
errorMessage(content);
}
});
*/
/*try {
$.ajax({
type: "POST",
contentType: "text/xml; charset=utf-8",
url: "http://localhost/PhoneGateway_WS/Service.svc/IsHostAvailable",
data: "2",
dataType: "xml",
success: function (response) {
//rsp = response;
//alert(response.IsHostAvailableResponse);
successMessage(response);
},
error: function (message) {
//msg = message;
//alert(message);
errorMessage(message);
}
});
}
catch (e) {
alert(e);
}*/

/*$.soap({
url					: 'http://localhost/PhoneGateway_WS/Service.svc/',
method              : 'IsHostAvailable',
appendMethodToURL   : true,
soap12              : false,
//namespaceQualifier  : 'lms',
//namespaceUrl		: 'urn://PhoneGateway_WS.IService',
params				: 	{
idExternalInstitution	: '2'
},
success: function (soapResponse) {
// do stuff with soapResponse
// if you want to have the response as JSON use soapResponse.toJSON();
// or soapResponse.toString() to get XML string
// or soapResponse.toXML() to get XML DOM
successMessage(soapResponse);
},
error: function (error) {
errorMessage(error);
}
});*/


//You can also use chained method that looks like this:
//var soapBody = new SOAPObject("Obj").attr("type", "IsHostAvailable").val("1");

//Create a new SOAP Request
//var sr = new SOAPRequest("IsHostAvailable", soapBody); //Request is ready to be sent

//Lets send it
//SOAPClient.Proxy = "http://localhost/PhoneGateway_WS/Service.svc/"; //Specify web-service address or a proxy file
//SOAPClient.SendRequest(sr, successMessage); //Send request to server and assign a callback



/*

var soapMessage =
'<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"> \
<soap:Body> \
<IsHostAvailable xmlns="http://sh.inobido.com/"> \
<idExternalInstitution>' + 2 + '</idExternalInstitution> \
</IsHostAvailable> \
</soap:Body> \
</soap:Envelope>';

$.ajax({
url: productServiceUrl,
type: "POST",
dataType: "xml",
data: soapMessage,
contentType: "text/xml; charset=\"utf-8\"",
success: function (response) {
//rsp = response;
//alert(response.IsHostAvailableResponse);
successMessage(response);
},
error: function (message) {
//msg = message;
//alert(message);
errorMessage(message);
}
});*/

//var webServiceURL = 'http://localhost/PhoneGateway_WS/Service.svc?op=IsHostAvailable';
//var soapMessage = 	'<soap12:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:soap12="http://www.w3.org/2003/05/soap-envelope">
//	+ 				'<soap12:Body><IsHostAvailable xmlns="http://tempuri.org/" /></soap12:Body></soap12:Envelope';

/*var soapRequest =
'<?xml version="1.0" encoding="utf-8"?> \
<soap:Envelope xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" \
xmlns:xsd="http://www.w3.org/2001/XMLSchema" \
xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/"> \
<soap:Body> \
<IsHostAvailable xmlns="http://localhost/PhoneGateway_WS/Service.svc"> \
</IsHostAvailable> \
</soap:Body> \
</soap:Envelope>';*/

/*$.ajax({
type		: 'POST', 
url			: webServiceURL,
contentType	: "text/xml",
data		: soapMessage,
processData	: false,
dataType	: "xml",
success		: function(response){alert("ok");},
error		: function(error)	{alert("nonOk");}
});*/
/*toto = 0;
$.soap({
url					: 'http://localhost/PhoneGateway_WS/Service.svc',
method				: 'IsHostAvailable',
namespaceQualifier	: 'wsdl',
namespaceUrl		: 'urn://localhost/PhoneGateway_WS',
params				: 	{
idExternalInstitution	: '2'
},
success: function (soapResponse) {
// do stuff with soapResponse
// if you want to have the response as JSON use soapResponse.toJSON();
// or soapResponse.toString() to get XML string
// or soapResponse.toXML() to get XML DOM
alert("ok");
},
error: function (error) {
alert(error);
}
});*/

/*var url = "/Service.svc";
var request = "<s:Envelope xmlns:s=\"http://schemas.xmlsoap.org/soap/envelope/\">" +
"<a:Action s:mustUnderstand=\"1\">http://tempuri.org/IService/IsHostAvailable</a:Action>" +
"<a:To s:mustUnderstand=\"1\">http://localhost/Service.svc</a:To>" +
"<s:Body>" +
"<IsHostAvailable xmlns=\"http://tempuri.org/\">" +
"<idExternalInstitution>2</idExternalInstitution>" +
"</IsHostAvailable>" +
"</s:Body>" +
"</s:Envelope>";
    
$.ajax({
type: "POST",
url: url,
data: request,
contentType: "text/xml",
beforeSend: function (xhr) {
xhr.setRequestHeader(
"SOAPAction",
"http://tempuri.org/IService/IsHostAvailable");
},
success: function (data, textStatus, jqXHR) {
//$("#result").text(jqXHR.responseText);
alert(jqXHR.responseText);
},
error: function (jqXHR, textStatus, errorThrown) {
//err = "jqXHR : " 	+ jqXHR.message() + "\n";
//err += "textStatus : " 	+ textStatus.message() + "\n";
//err = "errorThrown : " 	+ errorThrown.message() + "\n";
	        	 
//alert(err);
}
});*/